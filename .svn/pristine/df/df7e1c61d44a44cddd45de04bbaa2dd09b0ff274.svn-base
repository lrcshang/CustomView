package com.itheima74.toggleview.ui;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.util.AttributeSet;
import android.view.View;

/**
 * 自定义开关
 * @author poplar
 * 
 * Android 的界面绘制流程
 * 测量			 摆放		绘制
 * measure	->	layout	->	draw
 * 	  | 		  |			 |
 * onMeasure -> onLayout -> onDraw 重写这些方法, 实现自定义控件
 * 
 * onResume()之后执行
 * 
 * View
 * onMeasure() (在这个方法里指定自己的宽高) -> onDraw() (绘制自己的内容)
 * 
 * ViewGroup
 * onMeasure() (指定自己的宽高, 所有子View的宽高)-> onLayout() (摆放所有子View) -> onDraw() (绘制内容)
 */
public class ToggleView extends View {

	private Bitmap switchBackgroupBitmap; // 背景图片
	private Bitmap slideButtonBitmap; // 滑块图片
	private Paint paint; // 画笔
	private boolean mSwitchState = false; // 开关状态, 默认false

	/**
	 * 用于代码创建控件
	 * @param context
	 */
	public ToggleView(Context context) {
		super(context);
		init();
	}

	/**
	 * 用于在xml里使用, 可指定自定义属性
	 * @param context
	 * @param attrs
	 */
	public ToggleView(Context context, AttributeSet attrs) {
		super(context, attrs);
		init();
	}

	/**
	 * 用于在xml里使用, 可指定自定义属性, 如果指定了样式, 则走此构造函数
	 * @param context
	 * @param attrs
	 * @param defStyle
	 */
	public ToggleView(Context context, AttributeSet attrs, int defStyle) {
		super(context, attrs, defStyle);
		init();
	}
	
	private void init() {
		paint = new Paint();
	}

	
	@Override
	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
		setMeasuredDimension(switchBackgroupBitmap.getWidth(), switchBackgroupBitmap.getHeight());
	}

	// Canvas 画布, 画板. 在上边绘制的内容都会显示到界面上.
	@Override
	protected void onDraw(Canvas canvas) {
		// 1. 绘制背景
		canvas.drawBitmap(switchBackgroupBitmap, 0, 0, paint);
		
		// 2. 绘制滑块
		// 根据开关状态, 直接设置图片位置
		if(mSwitchState){// 开
			int newLeft = switchBackgroupBitmap.getWidth() - slideButtonBitmap.getWidth();
			canvas.drawBitmap(slideButtonBitmap, newLeft, 0, paint);
		}else {// 关
			canvas.drawBitmap(slideButtonBitmap, 0, 0, paint);
		}
	}

	/**
	 * 设置背景图
	 * @param switchBackground
	 */
	public void setSwitchBackgroundResource(int switchBackground) {
		switchBackgroupBitmap = BitmapFactory.decodeResource(getResources(), switchBackground);
	}

	/**
	 * 设置滑块图片资源
	 * @param slideButton
	 */
	public void setSlideButtonResource(int slideButton) {
		slideButtonBitmap = BitmapFactory.decodeResource(getResources(), slideButton);
	}

	/**
	 * 设置开关状态
	 * @param b
	 */
	public void setSwitchState(boolean mSwitchState) {
		this.mSwitchState = mSwitchState;
	}

}
